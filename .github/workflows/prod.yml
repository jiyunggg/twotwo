name: TwoTwo CI PipeLine

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # 우분투 최신 버전에서 실행
    steps:
      - name: 소스 코드 가져오기
        uses: actions/checkout@v3

      - name: JDK 설치
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'


      - name: 환경 변수 설정
        run: |
          echo "RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> $GITHUB_ENV
          echo "JWT_MASTER_EMAIL=${{ secrets.JWT_MASTER_EMAIL }}" >> $GITHUB_ENV
          echo "JWT_MANAGER_EMAIL=${{ secrets.JWT_MANAGER_EMAIL }}" >> $GITHUB_ENV
          echo "EXPIRE_TOKEN_TIME=${{ secrets.EXPIRE_TOKEN_TIME }}" >> $GITHUB_ENV

      - name: 빌드
        run: ./gradlew clean build -x test

     

      - name: JAR 파일 EC2에 복사
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "~/" # 실행시킬 파일의 위치 EC2 콘솔 내 생성
          password: ""
      

      - name: EC2 재실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: | # 실행중인 jar 재실행 // 백그라운드에서 실행
            pkill -f 'java -jar' || true
            nohup java -jar ~/app/*.jar > app.log 2>&1 &
            






