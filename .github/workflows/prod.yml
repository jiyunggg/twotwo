name: TwoTwo CI PipeLine

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # 우분투 최신 버전에서 실행
    steps:
      - name: 소스 코드 가져오기
        uses: actions/checkout@v3

      - name: JDK 설치
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'


      - name: 환경 변수 설정
        run: |
         echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application-prod.yml


      - name: 빌드
        run: |
          set -o allexport
          # source .env
          set +o allexport
          ./gradlew build -x test
        env:
          APPLICATION: ${{ secrets.APPLICATION }}
          # RDS_ENDPOINT: ${{ secrets.RDS_ENDPOINT }}
          # DB_USERNAME: ${{ secrets.DB_USERNAME }}
          # DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          # GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          # jwt_secret_key: ${{ secrets.JWT_SECRET_KEY }}
          # jwt_master_email: ${{ secrets.JWT_MASTER_EMAIL }}
          # jwt_manager_email: ${{ secrets.JWT_MANAGER_EMAIL }}
          # expire_token_time: ${{ secrets.EXPIRE_TOKEN_TIME }}

      

     

      - name: JAR 파일 EC2에 복사
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "~/app/" # 실행시킬 파일의 위치 EC2 콘솔 내 생
          
      

      - name: EC2 재실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            # source .env
            nohup java -jar twotwo-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &
            






